name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:

  build-juliaup:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
        arch: [x86_64, i686]
        include:
          - os: windows
            rstarget: pc-windows-msvc
          - os: macos
            rstarget: apple-darwin
          - os: ubuntu
            rstarget: unknown-linux-gnu
        exclude:
          - os: macos
            arch: i686
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        target: {{matrix.arch}}-{{matrix.rstarget}}
    - name: Release build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --bins
    - uses: actions/upload-artifact@v2
      with:
        name: juliaup-{{matrix.arch}}-{{matrix.rstarget}}
        path: target/release
  
  build-bundledjulia:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [{form1: 'x64', form2: 'win64'}, {form1: 'x86', form2: 'win32'}]
    steps:
    - uses: actions/checkout@v2
    - name: Read version info
      id: bundledversion
      run: |
        $versions = Get-Content versions.json | ConvertFrom-Json
        [version]$bundledVersion = $versions.JuliaAppPackage.BundledJuliaVersion
        $bundledVersionAsString = $versions.JuliaAppPackage.BundledJuliaVersion
        $bundledMajorVersionAsString = $bundledVersion.Major
        $bundledMinorVersionAsString = $bundledVersion.Minor
        echo "::set-output name=bundledVersion::$bundledVersionAsString"
        echo "::set-output name=bundledMajorVersion::$bundledMajorVersionAsString"
        echo "::set-output name=bundledMinorVersion::$bundledMinorVersionAsString"
    - name: Create folders
      run: |
        mkdir -Force build\downloads
        mkdir -Force build\juliaversions\${{matrix.platform.form1}}
    - name: Download Julia archive
      run: |
        if (-Not (Test-Path ".\build\downloads\julia-${{steps.bundledversion.outputs.bundledVersion}}-${{matrix.platform.form2}}.tar.gz"))
        {
          Invoke-WebRequest "https://julialang-s3.julialang.org/bin/winnt/${{matrix.platform.form1}}/${{steps.bundledversion.outputs.bundledMajorVersion}}.${{steps.bundledversion.outputs.bundledMinorVersion}}/julia-${{steps.bundledversion.outputs.bundledVersion}}-${{matrix.platform.form2}}.tar.gz" -OutFile "build\downloads\julia-${{steps.bundledversion.outputs.bundledVersion}}-${{matrix.platform.form2}}.tar.gz"
        }
    - name: Extract Julia archive
      run: |
        if (-Not (Test-Path "build\juliaversions\${{matrix.platform.form1}}\julia-$($bundledVersionAsString)"))
        {
          tar -xvzf "build\downloads\julia-${{steps.bundledversion.outputs.bundledVersion}}-${{matrix.platform.form2}}.tar.gz" -C build\juliaversions\${{matrix.platform.form1}}
        }
    - uses: actions/upload-artifact@v2
      with:
        name: bundled-julia-${{matrix.platform.form1}}
        path: build\juliaversions\${{matrix.platform.form1}}

  build-msix:
    needs: [build-juliaup, build-bundledjulia]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: bundled-julia-x64
        path: target\bundledjulia\extracted\x64
    - uses: actions/download-artifact@v2
      with:
        name: bundled-julia-x86
        path: target\bundledjulia\extracted\x86
    - uses: actions/download-artifact@v2
      with:
        name: juliaup-i686-pc-windows-msvc
        path: target\i686-pc-windows-msvc\release
    - uses: actions/download-artifact@v2
      with:
        name: juliaup-x86_64-pc-windows-msvc
        path: target\x86_64-pc-windows-msvc\release        
    - name: Build MSIX
      run: |
        push-location msix
        &"C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\MakeAppx.exe" build /f PackagingLayout.xml /op ..\target\msix
        pop-location
    - uses: actions/upload-artifact@v2
      with:
        name: msixinstaller
        path: target\msix\*.appxbundle

  build-storepayload:
    needs: [build-msix]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install StoreBroker
      run: |
        Install-Module -Name StoreBroker -Force
    - uses: actions/download-artifact@v2
      with:
        name: msixinstaller
    - name: Package
      run: |
        md (Join-Path $env:GITHUB_WORKSPACE "storepackage")
        New-SubmissionPackage -ConfigPath (Join-Path $env:GITHUB_WORKSPACE "storesubmission" "SBConfig.json") -PDPRootPath (Join-Path $env:GITHUB_WORKSPACE "storesubmission" "pdps") -ImagesRootPath (Join-Path $env:GITHUB_WORKSPACE "storesubmission" "images") -AppxPath *.appxbundle -OutPath (Join-Path $env:GITHUB_WORKSPACE "storepackage") -OutName Upload
    - uses: actions/upload-artifact@v2
      with:
        name: storepackage
        path: storepackage\*.*


  deploy-github-release:
    needs: build-msix
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: msixinstaller
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "*.appxbundle"
        token: ${{ secrets.GITHUB_TOKEN }}

  deploy-dev-channel:
    needs: [build-storepayload]
    environment: dev-channel
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Install StoreBroker
      run: Install-Module -Name StoreBroker -Force
    - uses: actions/download-artifact@v2
      with:
        name: storepackage      
    - name: Authenticate with store
      env:
        TENANTID: ${{ secrets.TENANTID }}
        CLIENTID: ${{ secrets.CLIENTID }}
        CLIENTSECRET: ${{ secrets.CLIENTSECRET }}
      run: |
        $sec = ConvertTo-SecureString $env:CLIENTSECRET -AsPlainText -Force
        $cred = New-Object System.Management.Automation.PSCredential $env:CLIENTID, $sec
        Set-StoreBrokerAuthentication -TenantId $env:TENANTID -Credential $cred
        Update-ApplicationFlightSubmission -ReplacePackages -AppId 9NJNWW8PVKMN -FlightId 2e2f9fe8-3950-4273-b80d-7f752296ca86 -SubmissionDataPath ".\Upload.json" -PackagePath ".\Upload.zip" -AutoCommit -Force

  deploy-releasepreview-channel:
    needs: [build-storepayload]
    environment: release-preview-channel
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Install StoreBroker
      run: Install-Module -Name StoreBroker -Force
    - uses: actions/download-artifact@v2
      with:
        name: storepackage      
    - name: Authenticate with store
      env:
        TENANTID: ${{ secrets.TENANTID }}
        CLIENTID: ${{ secrets.CLIENTID }}
        CLIENTSECRET: ${{ secrets.CLIENTSECRET }}
      run: |
        $sec = ConvertTo-SecureString $env:CLIENTSECRET -AsPlainText -Force
        $cred = New-Object System.Management.Automation.PSCredential $env:CLIENTID, $sec
        Set-StoreBrokerAuthentication -TenantId $env:TENANTID -Credential $cred
        Update-ApplicationFlightSubmission -ReplacePackages -AppId 9NJNWW8PVKMN -FlightId 732b234a-7ea9-4b65-8c9f-b9d9eaefb578 -SubmissionDataPath ".\Upload.json" -PackagePath ".\Upload.zip" -AutoCommit -Force

  deploy-release-channel:
    needs: [build-storepayload]
    environment: release-channel
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Install StoreBroker
      run: Install-Module -Name StoreBroker -Force
    - uses: actions/download-artifact@v2
      with:
        name: storepackage      
    - name: Authenticate with store
      env:
        TENANTID: ${{ secrets.TENANTID }}
        CLIENTID: ${{ secrets.CLIENTID }}
        CLIENTSECRET: ${{ secrets.CLIENTSECRET }}
      run: |
        $sec = ConvertTo-SecureString $env:CLIENTSECRET -AsPlainText -Force
        $cred = New-Object System.Management.Automation.PSCredential $env:CLIENTID, $sec
        Set-StoreBrokerAuthentication -TenantId $env:TENANTID -Credential $cred
        Update-ApplicationSubmission -ReplacePackages -AppId 9NJNWW8PVKMN -SubmissionDataPath ".\Upload.json" -PackagePath ".\Upload.zip" -AutoCommit -Force
